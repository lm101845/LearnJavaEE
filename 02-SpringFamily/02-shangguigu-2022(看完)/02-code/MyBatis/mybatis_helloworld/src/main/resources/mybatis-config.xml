<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>
    <!--引入properties文件，此后就可以在当前文件中使用${key}的方式访问value-->
    <properties resource="jdbc.properties">

    </properties>

    <!--
        类型别名：我们为一个具体的类型设置一个简短的名字
        MyBatis核心配置文件中的标签必须要按照指定的顺序配置：
        The content of element type "configuration" must match "(properties?,settings?,
        typeAliases?,typeHandlers?,objectFactory?,objectWrapperFactory?,reflectorFactory?,
        plugins?,environments?,databaseIdProvider?,mappers?)".
        在MyBatis的范围中，就可以使用别名表示一个具体的类型
    -->
    <typeAliases>
        <!--
        使用abc来表示com.atguigu.mybatis.pojo.User这个全类名
        type:设置需要起别名的类型
        alias:设置某个类型的别名
        -->
        <!--<typeAlias type="com.atguigu.mybatis.pojo.User" alias="abc"></typeAlias>-->
        <!--另一个写法，不写alias，会有一个默认的别名，就是他的类名，且不区分大小写-->

        <!--如果要设置很多别名，像下面这样写会很多-->
        <!--<typeAlias type="com.atguigu.mybatis.pojo.User" ></typeAlias>-->
        <!--<typeAlias type="com.atguigu.mybatis.pojo.A" ></typeAlias>-->
        <!--<typeAlias type="com.atguigu.mybatis.pojo.B" ></typeAlias>-->
        <!--<typeAlias type="com.atguigu.mybatis.pojo.C" ></typeAlias>-->
        <!--<typeAlias type="com.atguigu.mybatis.pojo.D" ></typeAlias>-->
        <!--<typeAlias type="com.atguigu.mybatis.pojo.E" ></typeAlias>-->
        <!--<typeAlias type="com.atguigu.mybatis.pojo.F" ></typeAlias>-->
        <!--<typeAlias type="com.atguigu.mybatis.pojo.G" ></typeAlias>-->
        <!--<typeAlias type="com.atguigu.mybatis.pojo.H" ></typeAlias>-->

        <!--我们使用另一个方式来设置别名,此时这个包下面所有的类都将全部拥有默认别名-->
        <package name="com.atguigu.mybatis.pojo"></package>
    </typeAliases>

    <!--
        配置连接数据库的环境
        属性：
        default:设置默认使用的环境的id
    -->
    <environments default="development">
        <!--
            environment:设置一个具体的连接数据库的环境
            属性：
            id:设置环境的唯一标识，不能重复
        -->
        <environment id="development">
            <!--
                transactionManager：设置事物管理器
                属性：
                type:设置事物管理的方式
                type="JDBC|MANAGED"
                    JDBC:表示使用JDBC中原生的事物管理方式
                    MANAGED:被管理，例如Spring
            -->
            <transactionManager type="JDBC"/>
            <!--transactionManager：事物管理器，类型是JDBC-->
            <dataSource type="POOLED">
                <!--
                    dataSource：设置数据源,帮助我们管理数据库的连接,如德鲁伊
                    属性：
                    type:设置数据源的类型
                    type="POOLED|UNPOOLED|JNDI"
                    POOLED:表示使用数据库连接池
                    UNPOOLED:表示不使用数据库连接池(每一次获取连接的时候都是重新获取的,每次都重新创建连接)
                    JNDI:表示使用上下文中的数据源
                -->
                <!--之前我们获取连接的时候就需要这4个参数：数据库驱动，url地址，用户名，密码-->
                <!--<property name="driver" value="com.mysql.cj.jdbc.Driver"/>-->
                <property name="driver" value="${jdbc.driver}"/>
                <!--<property name="url" value="jdbc:mysql://localhost:3306/ssm?serverTimezone=UTC"/>-->
                <property name="url" value="${jdbc.url}"/>
                <property name="username" value="${jdbc.username}"/>
                <!--<property name="username" value="root"/>-->
                <property name="password" value="${jdbc.password}"/>
                <!--<property name="password" value="123456"/>-->
            </dataSource>
        </environment>

        <environment id="test">
            <transactionManager type="JDBC"/>
            <dataSource type="POOLED">
                <property name="driver" value="com.mysql.cj.jdbc.Driver"/>
                <property name="url" value="jdbc:mysql://localhost:3306/ssm?serverTimezone=UTC"/>
                <property name="username" value="root"/>
                <property name="password" value="123456"/>
            </dataSource>
        </environment>
    </environments>

    <!--引入mybatis的映射文件-->
    <!--映射文件中，我们才写SQL语句-->
    <mappers>
        <!--这样写同样很麻烦-->
        <!--<mapper resource="mappers/UserMapper.xml"/>-->
        <!--<mapper resource="mappers/UserMapper.xml"/>-->
        <!--<mapper resource="mappers/UserMapper.xml"/>-->
        <!--<mapper resource="mappers/UserMapper.xml"/>-->
        <!--<mapper resource="mappers/UserMapper.xml"/>-->
        <!--<mapper resource="mappers/UserMapper.xml"/>-->
        <!--<mapper resource="mappers/UserMapper.xml"/>-->
        <!--<mapper resource="mappers/UserMapper.xml"/>-->

        <!--
            以包的方式引入映射文件，但是必须满足两个条件：
                1.mapper接口和映射文件所在的包必须一致
                2.mapper接口的名字和映射文件的名字必须一致
        -->
        <package name="com.atguigu.mybatis.mapper"></package>
    </mappers>
</configuration>